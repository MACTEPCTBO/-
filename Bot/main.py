from aiogram import Bot, Dispatcher, executor, types
from database import Database
from config import API_TOKEN, ADMIN_ID

bot = Bot(token=API_TOKEN)
dispatcher = Dispatcher(bot)

database = Database("database.db")

censure = []
with open("censure.txt", "r", encoding="utf8") as file:
    for word in file:
        censure.append("".join(word.split()))


@dispatcher.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–ª–æ—Ö–æ–π –±–æ—Ç–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤—Å–µ—Ö –±–∞–Ω–∏—Ç—å :)")


@dispatcher.message_handler(commands=['get_id'])
async def get_id(message: types.Message):
    await message.answer(message.from_user.id)


@dispatcher.message_handler(commands=['kick'])
async def kick(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        if not message.reply_to_message:
            await message.answer("üòñ –ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            return
        await message.bot.kick_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.reply_to_message.from_user.username} –∏—Å–∫–ª—é—á—ë–Ω –∏–∑ –±–µ—Å–µ–¥—ã.")
        await message.delete()


@dispatcher.message_handler(commands=['ban'])
async def kick(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        if not message.reply_to_message:
            await message.answer("üòñ –ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            return
        await message.bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.reply_to_message.from_user.username} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –±–µ—Å–µ–¥–µ.")
        await message.delete()


@dispatcher.message_handler(commands=['unban'])
async def unban(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        if not message.reply_to_message:
            await message.answer("üòñ –ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            return
        await message.bot.unban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.reply_to_message.from_user.username} —Ä–∞–∑–±–∞–Ω–µ–Ω –≤ –±–µ—Å–µ–¥–µ.")
        await message.delete()


@dispatcher.message_handler(commands=['mute'])
async def mute(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        if not message.reply_to_message:
            await message.answer("üòñ –ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
            return
        if len(message.text) < 6:
            await message.answer("‚ùì –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö, –ø—Ä–∏–º–µ—Ä: /mute 60")
            return
        mute_time = int(message.text[6:])
        database.add_mute(user_id=message.reply_to_message.from_user.id, mute_time=mute_time)
        await message.delete()
        await message.reply_to_message.reply(f"ü§ê –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.reply_to_message.from_user.username} –∑–∞–º—É—á–µ–Ω –Ω–∞ {mute_time} —Å–µ–∫—É–Ω–¥!")


@dispatcher.message_handler(content_types=['new_chat_members'])
async def new_user_in_chat(message: types.Message):
    await message.delete()
    # await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!")


@dispatcher.message_handler(content_types=['left_chat_member'])
async def user_left_from_chat(message: types.Message):
    await message.delete()


@dispatcher.message_handler()
async def delete_censure(message: types.Message):
    message_list = message.text.lower().split()
    for user_message in message_list:
        if user_message in censure:
            await message.delete()
            await message.answer("üò° –ê–π-—è–π-—è–π, –º–∞—Ç–µ—Ä–∏—Ç—å—Å—è –Ω–µ —Ö–æ—Ä–æ—à–æ :)")
            break

    if not database.examination(message.from_user.id):
        database.add(message.from_user.id)
    if not database.mute(message.from_user.id):
        pass
    else:
        await message.delete()


if __name__ == '__main__':
    executor.start_polling(dispatcher)
